---
elasticsearch:
  cluster_name: "production"

  image:
    name: docker.elastic.co/elasticsearch/elasticsearch
    tag: "7.8.0"
    imagePullPolicy: IfNotPresent

  security:
    enabled: true
    password: "Opstree@1234"

  plugins:
    - repository-s3

  master:
    enabled: true
    replicas: 3

    resources: {}
      # requests:
      #   cpu: 1000m
      #   memory: 1Gi
      # limits:
      #   cpu: 1000m
      #   memory: 1Gi
    jvmMax: "1g"
    jvmMin: "1g"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - "elasticsearch-cluster-master"
          topologyKey: kubernetes.io/hostname

    storageSpec: {}
      # volumeClaimTemplate:
      #   spec:
      #     storageClassName: standard
      #     accessModes: ["ReadWriteOnce"]
      #     resources:
      #       requests:
      #         storage: 1Gi
      #   selector: {}

  master:
    enabled: true
    replicas: 3

    resources: {}
      # requests:
      #   cpu: 1000m
      #   memory: 1Gi
      # limits:
      #   cpu: 1000m
      #   memory: 1Gi
    jvmMax: "1g"
    jvmMin: "1g"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - "elasticsearch-cluster-master"
          topologyKey: kubernetes.io/hostname

    storageSpec: {}
      # volumeClaimTemplate:
      #   spec:
      #     storageClassName: standard
      #     accessModes: ["ReadWriteOnce"]
      #     resources:
      #       requests:
      #         storage: 1Gi
      #   selector: {}

  data:
    enabled: true
    replicas: 3

    resources: {}
      # requests:
      #   cpu: 1000m
      #   memory: 1Gi
      # limits:
      #   cpu: 1000m
      #   memory: 1Gi
    jvmMax: "1g"
    jvmMin: "1g"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - "elasticsearch-cluster-data"
          topologyKey: kubernetes.io/hostname

    storageSpec: {}
      # volumeClaimTemplate:
      #   spec:
      #     storageClassName: standard
      #     accessModes: ["ReadWriteOnce"]
      #     resources:
      #       requests:
      #         storage: 1Gi
      #   selector: {}

  ingestion:
    enabled: true
    replicas: 3

    resources: {}
      # requests:
      #   cpu: 1000m
      #   memory: 1Gi
      # limits:
      #   cpu: 1000m
      #   memory: 1Gi
    jvmMax: "1g"
    jvmMin: "1g"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - "elasticsearch-cluster-ingestion"
          topologyKey: kubernetes.io/hostname

    storageSpec: {}
      # volumeClaimTemplate:
      #   spec:
      #     storageClassName: standard
      #     accessModes: ["ReadWriteOnce"]
      #     resources:
      #       requests:
      #         storage: 1Gi
      #   selector: {}

  client:
    enabled: true
    replicas: 3

    resources: {}
      # requests:
      #   cpu: 1000m
      #   memory: 1Gi
      # limits:
      #   cpu: 1000m
      #   memory: 1Gi
    jvmMax: "1g"
    jvmMin: "1g"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - "elasticsearch-cluster-client"
          topologyKey: kubernetes.io/hostname

    storageSpec: {}
      # volumeClaimTemplate:
      #   spec:
      #     storageClassName: standard
      #     accessModes: ["ReadWriteOnce"]
      #     resources:
      #       requests:
      #         storage: 1Gi
      #   selector: {}
